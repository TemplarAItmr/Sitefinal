---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Services from '../../components/Services.astro';
import TypewriterText from '../../components/TypewriterText.astro';
import { getLangFromUrl, useTranslations } from '../../utils/i18n';
import { languages } from '../../i18n/ui';

export function getStaticPaths() {
  return Object.keys(languages).map(lang => ({ params: { lang } }));
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Define the heading text based on language
const headingStart = lang === 'en' ? 'We develop' : 'Desenvolvemos';
const headingEnd = lang === 'en' ? 'AI for your business' : 'IA para o seu negócio';
---

<Layout title="TemplarAI - Soluções em Inteligência Artificial">
  <Header />
  <main class="pt-20">
    <!-- Hero Section -->
    <section class="py-20">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          <div class="text-center mb-12">
            <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-poppins font-bold text-white mb-12 leading-[1.2] tracking-normal">
              {headingStart} <TypewriterText words={lang === 'en' ? ['solutions', 'automations', 'agents'] : ['soluções', 'automações', 'agentes']} className="gradient-text" /> {headingEnd}
            </h1>
            <p class="text-lg md:text-xl text-white/80 mb-8 max-w-2xl mx-auto mt-8">
              {t('hero.subtitle')}
            </p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
              <a 
                href={`/${lang}/contacto`}
                class="glow-effect bg-gradient-to-r from-secondary to-accent text-white px-8 py-3 rounded-lg transition-all hover:scale-105"
              >
                {t('hero.cta.primary')}
              </a>
              <a 
                href={`/${lang}/servicos`}
                class="glass text-white px-8 py-3 rounded-lg hover:scale-105 transition-all border border-white/10"
              >
                {t('hero.cta.secondary')}
              </a>
            </div>
          </div>

          <!-- Stats -->
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-8 mt-16">
            {[
              {
                icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>`,
                label: t('stats.support')
              },
              {
                icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>`,
                label: t('stats.projects')
              },
              {
                icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
                </svg>`,
                label: t('stats.productivity')
              },
              {
                icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>`,
                label: t('stats.satisfaction')
              }
            ].map(stat => (
              <div class="glass p-4 md:p-6 rounded-lg text-center hover:scale-105 transition-transform">
                <div class="flex justify-center mb-4">
                  <div class="text-accent">
                    <Fragment set:html={stat.icon} />
                  </div>
                </div>
                <div class="text-sm text-white/70">{stat.label}</div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>

    <!-- Featured Clients -->
    <section class="py-20 relative overflow-hidden">
      <div class="container mx-auto px-4">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-poppins font-bold gradient-text mb-4">
            {t('companies.title')}
          </h2>
          <p class="text-lg text-white/80 max-w-2xl mx-auto">
            {t('companies.subtitle')}
          </p>
        </div>

        <div class="grid grid-cols-2 md:grid-cols-4 gap-8 items-center justify-items-center">
          {[
            {
              icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
              </svg>`,
              label: 'Hotelaria'
            },
            {
              icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
              </svg>`,
              label: 'Imobiliário'
            },
            {
              icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.0355339,7.03553391 L12.4497475,8.44974747 L12.4497475,17 M12.4497475,8.44974747 L13.8639612,7.03553391 M6.5,6 L6.5,15 C6.5,16.6568542 7.84314575,18 9.5,18 L14.5,18 C16.1568542,18 17.5,16.6568542 17.5,15 L17.5,6 M19,6 L5,6 M14,6 L14,5 C14,3.8954305 13.1045695,3 12,3 C10.8954305,3 10,3.8954305 10,5 L10,6" />
              </svg>`,
              label: 'Restauração'
            },
            {
              icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7h-7m0 0v7m0-7H6a2 2 0 00-2 2v9a2 2 0 002 2h12a2 2 0 002-2V9a2 2 0 00-2-2h-3zm-7 7h7m-7 0H6" />
              </svg>`,
              label: 'Clínicas e Serviços de Saúde'
            }
          ].map(sector => (
            <div class="glass p-6 rounded-lg w-full text-center hover:scale-105 transition-transform">
              <div class="flex justify-center mb-4">
                <div class="text-accent">
                  <Fragment set:html={sector.icon} />
                </div>
              </div>
              <div class="text-white/80 font-medium">{sector.label}</div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Services Section -->
    <Services />

    <!-- CTA Section -->
    <section class="py-20">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto glass rounded-lg p-8 md:p-12 text-center relative overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-r from-secondary/20 to-accent/20 blur-xl"></div>
          <div class="relative z-10">
            <h2 class="text-3xl md:text-4xl font-poppins font-bold text-white mb-4">
              {t('contact.title')}
            </h2>
            <p class="text-lg text-white/80 mb-8 max-w-2xl mx-auto">
              {t('contact.subtitle')}
            </p>
            <a 
              href={`/${lang}/contacto`}
              class="glow-effect bg-gradient-to-r from-secondary to-accent text-white px-8 py-3 rounded-lg transition-all hover:scale-105 inline-block"
            >
              {t('contact.cta')}
            </a>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  // This script ensures that the TypewriterText component is properly initialized
  // for both English and Portuguese versions
  document.addEventListener('astro:page-load', () => {
    // Force re-initialization of any client-side scripts
    const scripts = document.querySelectorAll('script[data-astro-rerun]');
    scripts.forEach(script => {
      const newScript = document.createElement('script');
      Array.from(script.attributes).forEach(attr => {
        newScript.setAttribute(attr.name, attr.value);
      });
      newScript.textContent = script.textContent;
      script.parentNode.replaceChild(newScript, script);
    });
  });
</script>